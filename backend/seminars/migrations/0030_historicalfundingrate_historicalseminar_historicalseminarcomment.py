# Generated by Django 2.2.7 on 2019-11-05 19:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        ('groups', '0005_historicaljanungroup'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('seminars', '0029_auto_20191105_1633'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalSeminarComment',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('text', models.TextField()),
                ('is_internal', models.BooleanField(default=False, verbose_name='intern?')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Erstellt am')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Geändert am')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
                ('seminar', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='seminars.Seminar')),
            ],
            options={
                'verbose_name': 'historical Kommentar',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSeminar',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=255, verbose_name='Titel')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, max_length=100, null=True, populate_from='title', verbose_name='URL-Titel')),
                ('status', models.CharField(choices=[('angemeldet', 'angemeldet'), ('zugesagt', 'zugesagt'), ('stattgefunden', 'stattgefunden'), ('Abrechnung abgeschickt', 'Abrechnung abgeschickt'), ('Abrechnung angekommen', 'Abrechnung angekommen'), ('rechnerische Prüfung', 'rechnerische Prüfung'), ('inhaltliche Prüfung', 'inhaltliche Prüfung'), ('Zweitprüfung', 'Zweitprüfung'), ('fertig geprüft', 'fertig geprüft'), ('überwiesen', 'überwiesen'), ('abgelehnt', 'abgelehnt'), ('abgesagt', 'abgesagt'), ('ohne Abrechnung', 'ohne Abrechnung'), ('Abrechnung unmöglich', 'Abrechnung unmöglich')], default='angemeldet', max_length=255, verbose_name='Status')),
                ('description', models.TextField(blank=True, help_text='Um was genau geht es in dem Seminar? Welche Inhalte werden vermittelt?', verbose_name='Beschreibung')),
                ('start_date', models.DateField(db_index=True, help_text='z.B. 2.5.2019', verbose_name='Start-Datum')),
                ('start_time', models.TimeField(blank=True, help_text='z.B. 15:00', null=True, verbose_name='Start-Zeit')),
                ('end_date', models.DateField(verbose_name='End-Datum')),
                ('end_time', models.TimeField(blank=True, null=True, verbose_name='End-Zeit')),
                ('location', models.CharField(blank=True, help_text='Stadt, in der das Seminar stattfindet', max_length=255, verbose_name='Ort')),
                ('planned_training_days', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='geplante Bildungstage')),
                ('planned_attendees_min', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='geplante Teilnehmende min.')),
                ('planned_attendees_max', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='geplante Teilnehmende max.')),
                ('requested_funding', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='gewünschte Förderung')),
                ('actual_attendees_total', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='TN insgesamt')),
                ('actual_attendees_jfg', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='TN nach JFG')),
                ('actual_attendence_days_total', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='TNT insgesamt')),
                ('actual_attendence_days_jfg', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='TNT nach JFG')),
                ('advance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Vorschuss')),
                ('actual_training_days', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='tatsächliche Bildungstage')),
                ('actual_funding', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='tatsächlicher Förderbedarf')),
                ('transferred_at', models.DateField(blank=True, null=True, verbose_name='überwiesen am')),
                ('expense_catering', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Verpflegung')),
                ('expense_accomodation', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Unterkunft')),
                ('expense_referent', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Referent_innen')),
                ('expense_travel', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Fahrtkosten')),
                ('expense_other', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Sonstige Ausgaben')),
                ('income_fees', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Teilnahmebeiträge')),
                ('income_public', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Öffentliche Zuwendungen')),
                ('income_other', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Sonstige Einnahmen')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Erstellt am')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Geändert am')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('group', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='groups.JANUNGroup', verbose_name='JANUN-Gruppe')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Besitzer_in')),
            ],
            options={
                'verbose_name': 'historical Seminar',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFundingRate',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('year', models.IntegerField(db_index=True, verbose_name='Jahr')),
                ('group_rate', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Satz für Gruppen')),
                ('group_rate_one_day', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Satz für Gruppen für Eintagesseminare')),
                ('group_limit_formula', models.CharField(blank=True, help_text='engl. Excel-Formel, z.B. =IF(B>=3,(B-3)*200+450,450)', max_length=255, verbose_name='Formel für Gruppen-Limit')),
                ('group_limit', models.DecimalField(blank=True, decimal_places=2, help_text='Hat Vorrang vor der Formel', max_digits=10, null=True, verbose_name='Gruppen-Limit')),
                ('single_rate', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Satz für Einzelpersonen')),
                ('single_rate_one_day', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Satz für Einzelpersonen für Eintagesseminare')),
                ('single_limit_formula', models.CharField(blank=True, help_text='engl. Excel-Formel, z.B. =IF(B>=3,(B-3)*200+450,450)', max_length=255, verbose_name='Formel für Einzelpersonen-Limit')),
                ('single_limit', models.DecimalField(blank=True, decimal_places=2, help_text='Hat Vorrang vor der Formel', max_digits=10, null=True, verbose_name='Einzelpersonen-Limit')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Förderungssatz',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
